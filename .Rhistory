y <- 2
x+y
class(x+y)
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x >= 10] <- 4
x
x <- 4L
class(x)
x <- c(4, "a", TRUE)
class(x)
x <- c(1,3, 5)
y <- c(3, 2, 10)
rbind(x, y)
x <- list(2, "a", "b", TRUE)
x[[2]]
length(x[[1]])
x <- 1:4
y <- 2:3
x+y
class(x+y)
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x > 10] <- 4
x
search()
lm
x <- list(a=1:4, b = rnorm(10), c= rnorm(20,1), d = rnorm(100, 5))
y<-lapply(x, mean)
x$a
y$a
y$b
y
rnorm(1:4)
rnorm(1)
rnorm(4)
n <- 1:4
r <- lapply(n, rnorm)
r
x <- list(rnorm(100), runif(100), rpois(100, 1))
sapply(x, quantile, probs = c(0.25, 0.75))
cube <- function(x, n) {
x^3
}
cube(3)
str(cube(3))
str("STR")
pow <- function(x = 4, n = 3) {
x^n
}
pow()
str(powr)
str(pow())
x <- 1:10
if(x > 5) {
x <- 0
}
library(datasets)
data(iris)
?iris
View(iris)
mean(iris$Sepal.Length)
iris[1]
iris[1,]
iris[iris$Species == 'virginica']
iris$Species == 'virginica'
iris[,iris$Species == 'virginica']
iris[,,iris$Species == 'virginica']
iris[ , , , ,iris$Species == 'virginica']
iris[iris$Species == 'virginica']
iris[iris$Species == 'virginica',]
virginica <- iris[iris$Species == 'virginica',]
mean(virginica$Sepal.Length)
apply(iris, 2, mean)
apply(iris[, 1:4], 2, mean)
apply(iris[, 1:4], 1, mean)
iris[, 1:4]
apply(iris, 1, mean)
colMeans(iris)
rowMeans(iris[, 1:4])
colMeans(iris[, 1:4])
library(datasets)
data(mtcars)
?mtcars
View(mtcars)
sapply(mtcars, cyl, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
mean(mtcars$mpg, mtcars$cyl)
?tapply
tapply(mtcars$hp, mtcars$cyl, mean)
122.28571-82.63636
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
debug(ls)
ls()
9
l
1
quit()
stop
ls
2
3
4
1
browser
exit
exit
1+2
cube <- function(x, n) {
x^3
}
cube(3)
pow <- function(x = 4, n = 3) {
x^n
}
pox()
pow()
rnorm()
rnorm(1,0)
rnorm(1,0,10)
rnorm(1,1,0)
rnorm(1,0,10)
rpois(0.7)
?rpois
dpois(0.7)
dpois(10,0.7)
dpois(1,0.7)
dpois(0,0.7)
dpois(0,0.7)
dpois(0,0.7)
dpois(0.1,0.7)
dpois(1,0.7)
dpois(3,0.7)
dpois(3,0.7)
rnorm(10)
x <- rnorm(10)
print(x)
x <- rnorm(10, 20, 2)
print(x)
summary(x)
rpois(10,1)
rpois(10,0.2)
rpois(10,0.9)
rpois(20,0.9)
x <- 1:100
x <- rnorm(10, 20, 2)
print(x)
summary(x)
x <- 1:100
e <- rnorm(100, 0, 1)
y <- 1.5 - 3 * x + e
plot(x,y)
set.seed(1)
x <- rnorm(100)
log.mu <- 0.5 + 0.3*x
y <- rpois(100, exp(log.mu))
summary(y)
plot(x,y)
x<- 1:10
y <- 1à:20
y <- 1à0:20
y <- 10:20
plot(x,y)
y <- 11:20
plot(x,y)
x <- rnorm(100)
hist(x)
plot(x,y,col=3)
x<-1:1à
x<-1:10
plot(x,y,col=3)
?save
?points
points(1,2,3)
points(c(1,2,3))
points(c(1,2,3))
points(c(1,2,3,4?5))
points(c(1,2,3,4,5))
points(1:20,1:20)
points(1:20,1:20)
?points
plot(-4:4, -4:4, type = "n")
?windows
??windows
?postscript
?xfig
?quartz
?barchart
?barchart
?splom
?xyplot
?plot
?boxplot
?hist
?boxplot
?par
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
weight
weight ~ Time
plot(0, 0, main = expression("theta")
)
plot(0, 0, main = "theta")
plot(0, 0, main = substitute(theta))
plot(0, 0, main = expression(theta))
plot(0, 0, main = expression("theta")
)
plot(0, 0, main = substitute(theta))
plot(0, 0, main = expression("theta")
)
plot(0, 0, main = expression(theta))
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
rpois(5,2)
rpois(5,2)
set.seed(2)
rpois(5, 2)
?axis
?jpeg
?barchart
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
plot(0, 0, main = expression("theta")
)
plot(0, 0, main = substitute(theta))
plot(0, 0, main = expression(theta))
set.seed(1)
rpois(5, 2)
?save
?gzfile
?jpeg
?axis
plot(1:4, rnorm(4), axes = FALSE)
axis(1, 1:4, LETTERS[1:4])
q()
?install
install.packages("KernSmooth")
load(KernSmooth)
load("KernSmooth")
load("KernSmooth")
load(KernSmooth)
install.packages("KernSmooth")
?KernSmooth
library(KernSmooth)
library(swirl)
swirl()
1:20
pi:10
15:1
?:
?`:`
seq(1,20)
seq(0,10,by=0.5)
myseq <- seq(5,10, length=30)
my_seq <- seq(5,10, length=30)
length(my_seq)
1:length(my_seq)
seq(along=my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0, 1, 2),times = 10)
rep(c(0, 1, 2), each= 10)
install.packages(knitr)
install.packages(knitr2)
install.packages("knitr2")
install.packages("knitr")
getwd()
setwd("./Documents/Data Science/Reproducible research/RepData_PeerAssessment1/")
activities <- read.csv("activity.csv")
means(activities$steps[activities$interval==5])
mean(activities$steps[activities$interval==5])
mean(activities$steps[activities$interval==5], na.rm=T)
levels(activities$steps)
activities$steps[1]
activities$interval[1]
levels(activities$interval)
1:5:10
1:10
1:5:10
1:-1:10
1:10:5
seq(1,10,5)
seq(0,10,5)
typeof(activities$interval[1])
as.Date(activities$interval[1])
as.Date(activities$interval[1])
factor(activities$interval)
levels <- factor(activities$interval)
act_pattern <- NULL
for (time in factor(activities$interval)){
act_pattern <- c(act_pattern, mean(activities$steps[activities$interval==time], na.rm=T))
}
plot(act_pattern)
plot(act_pattern, type="l")
?plot
plot(1:24,act_pattern, type="l")
length(act_pattern)
length(seq(1,24,12))
length(seq(0,24,1/12))
length(seq(0,24,1/24))
length(seq(0,24,1/190))
mean(activities$steps[activities$interval==105], na.rm=T)
mean(activities$steps[activities$interval==845], na.rm=T)
mean(activities$steps[activities$interval==110], na.rm=T)
mean(activities$steps[activities$interval==0], na.rm=T)
mean(activities$steps[activities$interval==05], na.rm=T)
factor(activities$interval)
length(factor(activities$interval))
levels(factor(activities$interval))
act_pattern <- NULL
for (time in levels(factor(activities$interval))){
act_pattern <- c(act_pattern, mean(activities$steps[activities$interval==time], na.rm=T))
}
plot(act_pattern, type="l")
strptime(1205, %H.%M.)
?strptime
strptime(1205, "%H.%M.")
strptime(1205, "%H.%M.%S")
strptime("1205", "%H.%M.%S")
strptime("1205", "%H.%M.")
strptime("1205", "%H.%M")
strptime("1205", "%H%M")
activities <- c(activities, activities$date+activities$interval)
activities <- read.csv("activity.csv")
act_pattern <- tapply(activities$steps, activities$interval, mean)
act_pattern <- tapply(activities$steps, activities$interval, mean, na.rm=T)
plot(act_pattern, type="l")
act_pattern <- NULL
for (time in levels(factor(activities$interval))){
act_pattern <- c(act_pattern, mean(activities$steps[activities$interval==time], na.rm=T))
}
plot(act_pattern, type="l")
plot(act_pattern, type="l")
act_pattern <- tapply(activities$steps, activities$interval, mean, na.rm=T)
plot(act_pattern, type="l")
plot(1:288, act_pattern, type="l")
288/24
seq(1,24,1/12)
length(seq(1,24,1/12))
length(seq(1,24,1/13))
length(seq(1,24,2/13))
length(seq(0,24,1/12))
length(seq(1/12,24,1/12))
plot(seq(1/12,24,1/12), act_pattern, type="l")
?plot
tapply(activities$steps, activities$interval, mean, na.rm=T)
max(act_pattern)
act_pattern
act_pattern[5]
act_pattern[5][1]
act_pattern[5,1]
max(act_pattern)
act_pattern[5]
act_pattern[1]
act_pattern[2]
which(act_pattern == max(act_pattern))
act_pattern[104]
sum(is.na(activities$steps))
activities_new <- activities
View(activities)
length(activities)
length(activities$steps)
act_pattern[1]
act_pattern[1(1)]
act_pattern[1]
2355%288
2355/288
3%2
3%%2
View(activities_new)
act_pattern[1]
act_pattern[1][1]
act_pattern[1][1][1]
act_pattern[0]
act_pattern[5]
act_pattern
factors(act_pattern)
factor(act_pattern)
level(act_pattern)
levels(act_pattern)
levels(act_pattern)
289%%288
288%%288
287%%288
for (i in 1:length(activities$steps)){
if (is.na(activities$steps[i])){
activities_new$steps[i] = act_pattern[(i-1)%%288]
}
}
for (i in 1:length(activities$steps)){
if (is.na(activities$steps[i])){
activities_new$steps[i] = act_pattern[i%%289]
}
}
act_pattern[1%%289]
act_pattern[2%%289]
act_pattern[289%%289]
act_pattern[289%%289+1]
act_pattern[1%%289+1]
act_pattern[289%%289+1]
for (i in 1:length(activities$steps)){
if (is.na(activities$steps[i])){
activities_new$steps[i] = act_pattern[(i-1)%%289 + 1]
}
}
View(activities_new)
head(act_pattern)
head(act_pattern,10)
sum(activities$steps != activities_new$steps)
sum(activities$steps != activities_new$steps, na.rm=T)
sum(activities$steps-activities_new$steps, na.rm=T)
sum(abs(activities$steps-activities_new$steps, na.rm=T))
sum(abs(activities$steps-activities_new$steps), na.rm=T)
histogram_new <- NULL
for (day in levels(activities_new$date) ){
histogram_new <- c(histogram_new, sum(activities_new$steps[activities_new$date==day], na.rm=T))
}
hist(histogram, main="Histogram of the total of steps per day", xlab = "total of steps per day")
histogram_new <- NULL
for (day in levels(activities_new$date) ){
histogram_new <- c(histogram_new, sum(activities_new$steps[activities_new$date==day], na.rm=T))
}
hist(histogram_new, main="Histogram of the total of steps per day", xlab = "total of steps per day")
histogram <- NULL
for (day in levels(activities$date) ){
histogram <- c(histogram, sum(activities$steps[activities$date==day], na.rm=T))
}
hist(histogram, main="Histogram of the total of steps per day", xlab = "total of steps per day")
hist(histogram_new, main="Histogram of the total of steps per day", xlab = "total of steps per day")
hist(histogram_new, main="Histogram of the total of steps per day", xlab = "total of steps per day")
hist(histogram, main="Histogram of the total of steps per day", xlab = "total of steps per day")
hist(histogram_new, main="Histogram of the total of steps per day", xlab = "total of steps per day")
median(histogram_new)
histogram_new
mean(histogram_new)
mean(histogram_new)
mean(histogram_new, na.rm=T)
median(histogram_new, na.rm=T)
hist(histogram_new, main="Histogram of the total of steps per day with the new data", xlab = "total of steps per day")
?weekdays
weekdays(activities$date[1])
weekdays(as.Date(activities$date[1]))
weekdays(as.Date(activities$date[1]))=="Monday"
weekdays(as.Date(activities$date[1]))=="Lundi"
activities_new$bla <- "a"
View(activities_new)
activities_new$bla <- NULL
View(activities_new)
activities_new$week <- "weekday"
View(activities_new)
activities_new$week[as.Date(activities_new$dates)=="Samedi"] <- "weekend"
activities_new$week[as.Date(activities_new$dates)=="Dimanche"] <- "weekend"
activities_new$week[as.Date(activities_new$date)=="Samedi"] <- "weekend"
activities_new$week[as.Date(activities_new$date)=="Dimanche"] <- "weekend"
sum(activities_new$week=="weekend")
sum(activities_new$week=="weekday")
sum(as.Date(activities_new$date)=="Samedi")
head(as.Date(activities_new$date),5)
activities_new$week[as.Date(weekday(activities_new$date))=="Samedi"] <- "weekend"
activities_new$week[as.Date(weekday(activities_new$date))=="Dimanche"] <- "weekend"
activities_new$week[weekdays(as.Date(activities_new$date))=="Samedi"] <- "weekend"
activities_new$week[weekdays(as.Date(activities_new$date))=="Dimanche"] <- "weekend"
sum(as.Date(activities_new$date)=="Samedi")
sum(weekdays(as.Date(activities_new$date))=="Samedi")
factors(activities_new$date)
factor(activities_new$date)
factor(activities_new$week)
level(activities_new$week)
levels(activities_new$week)
levels(activities_new$week) <- factor(activities_new$week)
levels(activities_new$week)
factor(activities_new$week)
?par
?aaply
?aapply
?tapply
tapply(activities$steps, activities$interval, activities$week,mean, na.rm=T)
tapply(activities$steps[activities$week=="weekend"], activities$interval[activities$week=="weekend"],mean, na.rm=T)
tapply(activities_new$steps[activities_new$week=="weekend"], activities_new$interval[activities_new$week=="weekend"],mean, na.rm=T)
sum(is.na(tapply(activities_new$steps[activities_new$week=="weekend"], activities_new$interval[activities_new$week=="weekend"],mean)))
act_pattern_WD <- tapply(activities_new$steps[activities_new$week=="weekday"], activities_new$interval[activities_new$week=="weekday"],mean, na.rm=T)
act_pattern_WE <- tapply(activities_new$steps[activities_new$week=="weekday"], activities_new$interval[activities_new$week=="weekday"],mean, na.rm=T)
par(mfrow = c(2,1))
plot(seq(1/12,24,1/12), act_pattern_WD, type="l", main = "Average number of steps in a day", xlab = "Time (hour)", ylab = "Number of steps")
plot(seq(1/12,24,1/12), act_pattern_WE, type="l", main = "Average number of steps in a day", xlab = "Time (hour)", ylab = "Number of steps")
act_pattern_WD <- tapply(activities_new$steps[activities_new$week=="weekday"], activities_new$interval[activities_new$week=="weekday"],mean, na.rm=T)
act_pattern_WE <- tapply(activities_new$steps[activities_new$week=="weekend"], activities_new$interval[activities_new$week=="weekend"],mean, na.rm=T)
par(mfrow = c(2,1))
plot(seq(1/12,24,1/12), act_pattern_WD, type="l", main = "Average number of steps in a day", xlab = "Time (hour)", ylab = "Number of steps")
plot(seq(1/12,24,1/12), act_pattern_WE, type="l", main = "Average number of steps in a day", xlab = "Time (hour)", ylab = "Number of steps")
plot(seq(1/12,24,1/12), act_pattern_WD, type="l", main = "Average number of steps in a day", xlab = "Time (hour)", ylab = "Number of steps")
plot(act_pattern_WD, type="l", main = "Average number of steps in a day", xlab = "Time (hour)", ylab = "Number of steps")
act_pattern <- tapply(activities$steps, activities$interval, mean, na.rm=T)
plot(seq(1/12,24,1/12), act_pattern, type="l", main = "Average number of steps in a day", xlab = "Time (hour)", ylab = "Number of steps")
act_pattern <- tapply(activities$steps, activities$interval, mean, na.rm=T)
plot(seq(1/12,24,1/12), act_pattern, type="l", main = "Average number of steps in a day", xlab = "Time (hour)", ylab = "Number of steps")
par(mfrow = c(2,1))
plot(seq(1/12,24,1/12), act_pattern_WD, type="l", main = "Average number of steps in a day", xlab = "Time (hour)", ylab = "Number of steps")
plot(seq(1/12,24,1/12), act_pattern_WE, type="l", main = "Average number of steps in a day", xlab = "Time (hour)", ylab = "Number of steps")
